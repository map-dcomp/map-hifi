import org.gradle.internal.os.OperatingSystem

buildscript {
  repositories {
      jcenter()
  }
}

// Plugins
plugins {
    //id 'checkstyle'
    //id 'com.dorongold.task-tree' version '1.3'
    id 'com.github.johnrengelman.shadow'
    id "com.gorylenko.gradle-git-properties" version "1.5.2"
}


def props = new Properties()
file("../../MAP-code/src/P2Protelis/gradle.properties").withInputStream { props.load(it) }
file("../../MAP-code/src/gradle.common.properties").withInputStream { props.load(it) }
file("../../gradle.common.properties").withInputStream { props.load(it) }

group = 'com.bbn'
version = props.getProperty("map_hifi_version")

description = """Face Recognition"""

sourceCompatibility = 1.8
targetCompatibility = 1.8
tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

repositories {

 mavenLocal()
 jcenter()
}

configurations {
    providedRuntime
    all*.exclude group: 'ch.qos.logback'
}

dependencies {
    implementation project(':hifi-utils')

    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: props.getProperty("log4j_version")
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: props.getProperty("log4j_version")

    implementation group: 'org.apache.commons', name: 'commons-csv', version: props.getProperty("commons_csv_version")
    
    implementation group: 'org.openpnp', name: 'opencv', version: '3.4.2-0'
    
    testImplementation group: 'junit', name: 'junit', version: props.getProperty("junit_version")
    testImplementation group: 'org.hamcrest', name: 'hamcrest-library', version: props.getProperty("hamcrest_version")
}

checkstyle {
    config = resources.text.fromFile('style.xml', 'UTF-8')
    showViolations = true
    ignoreFailures = false
    toolVersion = "8.10"
}

spotbugs {
  ignoreFailures = true
  toolVersion = '3.1.12'
}

task sourceJar(type: Jar) {
  classifier "sources"
  from sourceSets.main.allJava
}

publishing {
    repositories {
        mavenLocal()
    }
    
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourceJar
        }
    }
}

task serverShadowJar(type: com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar) {
  archiveName = 'FaceDetectionServer.jar'
  from sourceSets.main.output
  configurations = [project.configurations.testRuntime]
  manifest {
    attributes 'Main-Class': 'com.bbn.map.FaceRecognition.face_detection_server.FaceDetectionServer'
  }
}

task clientShadowJar(type: com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar) {
  archiveName = 'ImageSendingClient.jar'
  from sourceSets.main.output
  configurations = [project.configurations.testRuntime]
  manifest {
    attributes 'Main-Class': 'com.bbn.map.FaceRecognition.image_sending_client.ImageSendingClient'
  }
}


artifacts {
  archives serverShadowJar, clientShadowJar
}

gitProperties {
    gitPropertiesDir = "${buildDir}/resources/main/com/bbn/map/FaceRecognition"
}
